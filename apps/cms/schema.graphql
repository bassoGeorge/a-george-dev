# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type Post {
  id: ID!
  title: String
  publishedAt: DateTime
  status: String
  content: Post_content_Document
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

type Post_content_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

input PostWhereUniqueInput {
  id: ID
  title: String
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  id: IDFilter
  title: StringFilter
  publishedAt: DateTimeNullableFilter
  status: StringNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input PostOrderByInput {
  id: OrderDirection
  title: OrderDirection
  publishedAt: OrderDirection
  status: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input PostUpdateInput {
  title: String
  publishedAt: DateTime
  status: String
  content: JSON
}

input PostUpdateArgs {
  where: PostWhereUniqueInput!
  data: PostUpdateInput!
}

input PostCreateInput {
  title: String
  publishedAt: DateTime
  status: String
  content: JSON
}

type Heartbeat {
  id: ID!
  date: DateTime
  referrer: String
}

input HeartbeatWhereUniqueInput {
  id: ID
}

input HeartbeatWhereInput {
  AND: [HeartbeatWhereInput!]
  OR: [HeartbeatWhereInput!]
  NOT: [HeartbeatWhereInput!]
  id: IDFilter
  date: DateTimeNullableFilter
  referrer: StringFilter
}

input HeartbeatOrderByInput {
  id: OrderDirection
  date: OrderDirection
  referrer: OrderDirection
}

input HeartbeatUpdateInput {
  date: DateTime
  referrer: String
}

input HeartbeatUpdateArgs {
  where: HeartbeatWhereUniqueInput!
  data: HeartbeatUpdateInput!
}

input HeartbeatCreateInput {
  date: DateTime
  referrer: String
}

type TestingLog {
  id: ID!
  title: String
  value: String
  date: DateTime
  colpa: String
  colpb: String
}

input TestingLogWhereUniqueInput {
  id: ID
}

input TestingLogWhereInput {
  AND: [TestingLogWhereInput!]
  OR: [TestingLogWhereInput!]
  NOT: [TestingLogWhereInput!]
  id: IDFilter
  title: StringFilter
  value: StringFilter
  date: DateTimeNullableFilter
  colpa: StringFilter
  colpb: StringFilter
}

input TestingLogOrderByInput {
  id: OrderDirection
  title: OrderDirection
  value: OrderDirection
  date: OrderDirection
  colpa: OrderDirection
  colpb: OrderDirection
}

input TestingLogUpdateInput {
  title: String
  value: String
  date: DateTime
  colpa: String
  colpb: String
}

input TestingLogUpdateArgs {
  where: TestingLogWhereUniqueInput!
  data: TestingLogUpdateInput!
}

input TestingLogCreateInput {
  title: String
  value: String
  date: DateTime
  colpa: String
  colpb: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createPost(data: PostCreateInput!): Post
  createPosts(data: [PostCreateInput!]!): [Post]
  updatePost(where: PostWhereUniqueInput!, data: PostUpdateInput!): Post
  updatePosts(data: [PostUpdateArgs!]!): [Post]
  deletePost(where: PostWhereUniqueInput!): Post
  deletePosts(where: [PostWhereUniqueInput!]!): [Post]
  createHeartbeat(data: HeartbeatCreateInput!): Heartbeat
  createHeartbeats(data: [HeartbeatCreateInput!]!): [Heartbeat]
  updateHeartbeat(where: HeartbeatWhereUniqueInput!, data: HeartbeatUpdateInput!): Heartbeat
  updateHeartbeats(data: [HeartbeatUpdateArgs!]!): [Heartbeat]
  deleteHeartbeat(where: HeartbeatWhereUniqueInput!): Heartbeat
  deleteHeartbeats(where: [HeartbeatWhereUniqueInput!]!): [Heartbeat]
  createTestingLog(data: TestingLogCreateInput!): TestingLog
  createTestingLogs(data: [TestingLogCreateInput!]!): [TestingLog]
  updateTestingLog(where: TestingLogWhereUniqueInput!, data: TestingLogUpdateInput!): TestingLog
  updateTestingLogs(data: [TestingLogUpdateArgs!]!): [TestingLog]
  deleteTestingLog(where: TestingLogWhereUniqueInput!): TestingLog
  deleteTestingLogs(where: [TestingLogWhereUniqueInput!]!): [TestingLog]
}

type Query {
  posts(where: PostWhereInput! = {}, orderBy: [PostOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PostWhereUniqueInput): [Post!]
  post(where: PostWhereUniqueInput!): Post
  postsCount(where: PostWhereInput! = {}): Int
  heartbeats(where: HeartbeatWhereInput! = {}, orderBy: [HeartbeatOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: HeartbeatWhereUniqueInput): [Heartbeat!]
  heartbeat(where: HeartbeatWhereUniqueInput!): Heartbeat
  heartbeatsCount(where: HeartbeatWhereInput! = {}): Int
  testingLogs(where: TestingLogWhereInput! = {}, orderBy: [TestingLogOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TestingLogWhereUniqueInput): [TestingLog!]
  testingLog(where: TestingLogWhereUniqueInput!): TestingLog
  testingLogsCount(where: TestingLogWhereInput! = {}): Int
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
