name: Dummy workflow
on:
  workflow_dispatch:
  push:
    branches: [feature/*]

env:
  DB_BRANCH_NAME: dummy

jobs:
  Info:
    uses: ./.github/workflows/info.yml
  Run_Tests:
    needs: [Info]
    uses: ./.github/workflows/tests.yml
    with:
      affected_base: ${{ needs.Info.outputs.affected_base }}
      affected_head: ${{ needs.Info.outputs.affected_head }}
  Setup_DB:
    needs: [Run_Tests, Info]
    runs-on: ubuntu-latest
    env:
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      DB_NAME: ${{ secrets.DB_NAME }}
      ORG_NAME: ${{ secrets.ORG_NAME }}
    steps:
      - name: ⬇️ Check out repository code
        uses: actions/checkout@v3
      - name: Install Planetscale CLI
        uses: ./.github/actions/pscale
      - name: Create Planetscale branch
        id: pscaleBranch
        run: |
          cd scripts/pscale
          bash create-branch.sh $DB_BRANCH_NAME
      - name: Create database url
        id: pscaleDbUrl
        if: needs.Info.outputs.should_deploy_schema == 'true'
        run: |
          cd scripts/pscale
          bash create-branch-connection-string.sh $DB_BRANCH_NAME admin
      - name: Deploy schema
        if: needs.Info.outputs.should_deploy_schema == 'true'
        env:
          DATABASE_URL: ${{ steps.pscaleDbUrl.outputs.DB_BRANCH_CONNECTION_STRING }}
        run: yarn nx run cms:push-schema
  Site_Preview:
    needs: [Run_Tests, Info, Setup_DB]
    if: needs.Info.outputs.should_preview_site == 'true' || needs.Info.outputs.should_deploy_schema == 'true'
    uses: ./.github/workflows/site-preview.yml
    with:
      title: ${{ format('Pull request {0} - {1}', github.event.pull_request.number, github.event.pull_request.title) }}
      NETLIFY_SITE_ID: ${{ vars.AGEORGEDEV_SITE_ID }}
      DB_BRANCH_NAME: ${{ env.DB_BRANCH_NAME }}
    secrets:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      DB_NAME: ${{ secrets.DB_NAME }}
      ORG_NAME: ${{ secrets.ORG_NAME }}
