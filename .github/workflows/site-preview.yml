name: Site Preview
on:
  workflow_call:
    inputs:
      title:
        required: true
        type: string
      NETLIFY_SITE_ID:
        required: true
        type: string
      DB_BRANCH_NAME:
        required: true
        type: string
    secrets:
      NETLIFY_AUTH_TOKEN:
        required: true
      DB_NAME:
        required: true
      ORG_NAME:
        required: true
      PLANETSCALE_SERVICE_TOKEN_ID:
        required: true
      PLANETSCALE_SERVICE_TOKEN:
        required: true

jobs:
  SitePreview:
    runs-on: ubuntu-latest
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      ORG_NAME: ${{ secrets.ORG_NAME }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      DB_BRANCH_NAME: ${{ inputs.DB_BRANCH_NAME }}
    steps:
      - name: ‚¨áÔ∏è Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install pscale CLI
        uses: ./.github/actions/pscale
      - name: üåè Create database url
        id: pscaleAction
        run: |
          cd scripts/pscale
          bash create-branch-connection-string.sh $DB_BRANCH_NAME readwriter
      - name: ‚éî Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'yarn'
      - name: üì• Install dependencies
        run: yarn install --frozen-lockfile
      - name: üöÄ Deploy preview site
        uses: ./.github/actions/deploy-site
        id: deploy
        with:
          production: false
          note: ${{ inputs.title }}
          NETLIFY_SITE_ID: ${{ inputs.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          DB_BRANCH_CONNECTION_STRING: ${{ steps.pscaleAction.outputs.DB_BRANCH_CONNECTION_STRING }}
      - name: üß™ Run e2e
        uses: ./.github/actions/run-e2e
        with:
          site_url: ${{ steps.deploy.outputs.preview_url }}
          run_seed: true
          DATABASE_URL: ${{ steps.pscaleAction.outputs.DB_BRANCH_CONNECTION_STRING }}
