name: Manage Planetscale branches
on:
  workflow_call:
    inputs:
      BRANCH_NAME:
        required: true
        type: string
      actions:
        required: true
        type: string
    secrets:
      ORG_NAME:
        required: true
      DB_NAME:
        required: true
      PLANETSCALE_SERVICE_TOKEN_ID:
        required: true
      PLANETSCALE_SERVICE_TOKEN:
        required: true
    outputs:
      DB_BRANCH_URL:
        description: 'URL of the db branch'
        value: ${{ jobs.Pscale.outputs.BRANCH_URL }}
      DB_BRNACH_CONNECTION_STRING:
        description: 'Connection string for the db_branch'
        value: ${{ jobs.Pscale.outputs.BRANCH_CONNECTION_STRING }}

jobs:
  Pscale:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ inputs.BRANCH_NAME }}
      DB_NAME: ${{ secrets.DB_NAME }}
      ORG_NAME: ${{ secrets.ORG_NAME }}
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      CLI_VERSION: 0.139.0
    steps:
      - name: Install Planetscale CLI
        run: |
          mkdir -p ~/pscale-install
          wget -P ~/pscale-install https://github.com/planetscale/cli/releases/download/v${{ env.CLI_VERSION }}/pscale_${{ env.CLI_VERSION }}_linux_amd64.deb
          sudo dpkg -i ~/pscale-install/pscale_${{ env.CLI_VERSION }}_linux_amd64.deb
          sudo apt-get install -f
          pscale version
          rm -rf ~/pscale-install
      - name: Test connection
        run: pscale branch list $DB_NAME --org $ORG_NAME
      - name: ⬇️ Check out repository code
        uses: actions/checkout@v3
      - name: Create branch
        id: createBranch
        if: contains(inputs.actions, 'create')
        run: |
          cd scripts/pscale
          bash create-branch.sh $BRANCH_NAME
      - name: Result
        run: echo ${{ steps.createBranch.outputs.TEST_RESULT }}
    outputs:
      DB_BRANCH_URL: ${{ steps.createBranch.outputs.DB_BRANCH_URL }}
      DB_BRNACH_CONNECTION_STRING: ${{ steps.createBranch.outputs.DB_BRNACH_CONNECTION_STRING }}
